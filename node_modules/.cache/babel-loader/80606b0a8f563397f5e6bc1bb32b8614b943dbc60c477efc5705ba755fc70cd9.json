{"ast":null,"code":"import toast from 'react-hot-toast';\n\n/** validate login page username */\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/** validate password */\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/** validate reset password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error('Password not match...!');\n  }\n  return errors;\n}\n\n/** validate register form */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n}\n\n/** ************************ */\n\n/** validate password */\nfunction passwordVerify() {\n  let errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  const specialChars = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/;\n  if (!values.password) {\n    errors.password = toast.error('Password Required...!');\n  } else if (values.password.includes('')) {\n    errors.password = toast.error('Wrong Password...!');\n  } else if (values.password.length < 4) {\n    errors.password = toast.error('Password must...!');\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error('Password specialsC...!');\n  }\n  return errors;\n}\n\n/** validate username */\nfunction usernameVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.username) {\n    error.username = toast.error('Username Required...!');\n  } else if (values.username.includes('')) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}\n\n/** validates email */\nfunction emailVerify() {\n  let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let values = arguments.length > 1 ? arguments[1] : undefined;\n  if (!values.email) {\n    error.email = toast.error('E-mail Required...!');\n  } else if (values.email.includes('')) {\n    error.email = toast.error('Wrong E-mail...!');\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {}\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","error","registerValidation","specialChars","includes","length","test","username","emailVerify","email"],"sources":["/Users/pquezada/Documents/login_mern/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\n\n/** validate login page username */\nexport async function usernameValidate(values){\n    const errors = usernameVerify({}, values);\n\n    return errors;\n}\n\n/** validate password */\nexport async function passwordValidate(values){\n    const errors = passwordVerify({}, values);\n\n    return errors;\n}\n\n/** validate reset password */\nexport async function resetPasswordValidation(values){\n    const errors = passwordVerify({}, values);\n\n    if(values.password !== values.confirm_pwd){\n        errors.exist = toast.error('Password not match...!');\n    }\n\n    return errors;\n}\n\n/** validate register form */\nexport async function registerValidation(values){\n    const errors = usernameVerify({}, values)\n    passwordVerify(errors, values);\n}\n\n/** ************************ */\n\n/** validate password */\nfunction passwordVerify(errors = {}, values){\n    const specialChars = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/;\n    if(!values.password){\n        errors.password = toast.error('Password Required...!');\n    } else if(values.password.includes('')){\n        errors.password = toast.error('Wrong Password...!');\n    } else if(values.password.length < 4){\n        errors.password = toast.error('Password must...!');\n    } else if(!specialChars.test(values.password)){\n        errors.password = toast.error('Password specialsC...!');\n    }\n\n    return errors;\n}\n\n/** validate username */\nfunction usernameVerify(error = {}, values){\n    if(!values.username){\n        error.username = toast.error('Username Required...!');\n    }else if(values.username.includes('')){\n        error.username = toast.error('Invalid Username...!');\n    }\n\n    return error;\n}\n\n/** validates email */\nfunction emailVerify(error = {}, values){\n    if(!values.email){\n        error.email = toast.error('E-mail Required...!');\n    }else if(values.email.includes('')){\n        error.email = toast.error('Wrong E-mail...!')\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}